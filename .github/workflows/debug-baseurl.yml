# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Debug GHA output

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["thomasht86/fix-base-url"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        # https://github.com/ruby/setup-ruby/releases/tag/v1.207.0
        uses: ruby/setup-ruby@76da3376798599115ed11bf448e7a8390e34378c
        with:
          ruby-version: "3.1.0" # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5

      - name: Echo output
        run: echo "Base path is ${{ steps.pages.outputs.base_path }}"

      - name: Print all pages outputs as JSON
        run: |
          echo "All pages outputs as JSON:"
          echo '{
            "base_path": "${{ steps.pages.outputs.base_path }}",
            "base_url": "${{ steps.pages.outputs.base_url }}",
            "host": "${{ steps.pages.outputs.host }}",
            "origin": "${{ steps.pages.outputs.origin }}"
          }' | jq .

      - name: Print outputs using toJSON (alternative method)
        run: |
          echo "Pages outputs using toJSON:"
          echo '${{ toJSON(steps.pages.outputs) }}'
  #     - name: Build with Jekyll
  #       # Outputs to the './_site' directory by default
  #       run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
  #       env:
  #         JEKYLL_ENV: production
  #     - name: Upload artifact
  #       # Automatically uploads an artifact from the './_site' directory by default
  #       uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3

  # # Deployment job
  # deploy:
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4
